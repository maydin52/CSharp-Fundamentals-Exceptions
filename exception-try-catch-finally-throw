//Hata Yonetimi...
//Yazım Hataları
//Hatalı metinin altı kırmız olarak çizilir, ve uygulama derlenmez...

//Mantıksal Hatalar
//Uyarı verilmez...(Design-Time veya Run-Time esnasında)
//Bulunması zordur...

//Istisnalar(Exception)

//Debugging

//Design-Time
//Run-Time
//console.writeline("merhaba dunya");
//Console.WriteLine("")

int[] sayilar = { 2, 65, 7 };
Console.WriteLine(sayilar[10]);

int a = 12, b = 0, c = 0;

c = a / b;

Console.WriteLine(c);

Console.WriteLine("Merhaba");

///ONEMLI
///try-catch kullanmadan riski onleyebiliyorsak, oyle yapmalıyız...
///şart cumleleri ile engellenebiliyorsa, onunla engelle

//Istisnaların yakalanması
// try :  riskin oldugu satirlari try blogu icerisine almak lazım...

// catch : olusan istisnaları yakalamak icin kullanılır...

// finally: istisna olsa da olmasa da mutlaka calisir...

// throw

//try,catch, finally : istisna yakalamak için kullanılır...
//throw : istisna olusturmak için kullanılır...

----------------------------------


try
{
    int[] sayilar = { 2, 65, 7 };
    Console.WriteLine(sayilar[10]);

    int a = 12, b = 0, c = 0;

    c = a / b;

    Console.WriteLine(c);

}
catch 
{
    Console.WriteLine("ISTISNA Olustu...");

}
Console.WriteLine("Merhaba");

-------------------------------------------


try
{
    int[] sayilar = { 2, 65, 7 };
    Console.WriteLine(sayilar[1]);

    int a = 12, b = 1, c = 0;

    c = a / b;

    Console.WriteLine(c);

}
catch (DivideByZeroException ex)
{
    Console.WriteLine("SMS Gonder...");
}
catch (IndexOutOfRangeException ex)
{
    Console.WriteLine("Veritabanına yaz...");
}
catch (Exception ex)
{
    //Birden fazla catch kullanımlarında en genel olan en sonda olmalı...
    Console.WriteLine("ISTISNA Olustu..." + ex.Message);
}
finally {
    Console.WriteLine("Istisna olsa da olmasa da her durumda calis...");
}
Console.WriteLine("Merhaba");

----------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp5
{
    internal class TenException:Exception
    {
        public override string Message => "10 olamaz....";
    }
}


//throw kullanımı...

using ConsoleApp5;
int sayi = int.Parse(Console.ReadLine());

try
{
    if (sayi == 5)
        throw new Exception("5 olamaz...");
    else if (sayi == 10)
        throw new TenException();
}
catch (Exception ex)
{

    Console.WriteLine(ex.Message);
   
}

-------------------------------------------

/*

int sayi1 = 10;
int sayi2 = 20;

int sonuc = sayi1 + sayi2;

//Console.WriteLine("sonuc: " + sonuc);
Console.WriteLine($"sonuç: {sonuc}");

int sayi3 = 30;
int sayi5 = 0;

try
{
  int sonuc2 = sayi3 / sayi5;
  Console.WriteLine($"Bölme sonuç: {sonuc2}");
}
catch (DivideByZeroException)
{
  Console.WriteLine("sayı sıfıra bölünemez"); // intellisense kod yazımını iyileştirmek
}
catch (Exception)
{
  Console.WriteLine("uygulamada bir hata meydana geldi");
}
finally
{
  // try da olsa catch de olsa burada hangi kodun çalışmasını isterseniz onları yazabilirsiniz
  Console.WriteLine("Program sonlandı");
}

*/

-------------------------------------------
/*

int sayi1 = 0, sayi2 =0 ; // global scope 
basla: // nirengi noktası uygulamanın ilk çalışmaya başladığı nokta // label tanımı

try
{
  // block scope
  // try blokları genelde tür dönüşüm işlemlerinde hataya neden olur.
  Console.WriteLine("Sayi1 giriniz");
    sayi1 = int.Parse(Console.ReadLine());

  Console.WriteLine("Sayi2 giriniz");
    sayi2 = Convert.ToInt32(Console.ReadLine());

  Convert.ToInt32(5.5); // 5; convert ile iki sayısal ifade arasında dönüşüm mümkün.

}
catch (FormatException hata)
{
  // exception dan gelen hata mesajını direkt kullanıcıya göstermek için
  Console.WriteLine(hata.Message); 
}

if (sayi1 > sayi2)
{
  Console.WriteLine("Sayi1 büyük");
}
else if(sayi2 > sayi1)
{
  Console.WriteLine("Sayi2 büyük");
} 
else
{
  Console.WriteLine("Sayılar eşit");
  // szyılar eşitse tüm kodlar yukarı yönlü çalışsın başa dönsün diye
  goto basla; // label tanıma yönlen
}

*/

-------------------------------------------





